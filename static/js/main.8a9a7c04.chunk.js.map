{"version":3,"sources":["img/Milka.jpg","img/LikeIcon.png","img/Bikini.jpg","img/BikiniPost.jpg","img/MilkaPost1.jpg","img/MilkaPost2.jpg","img/Murka.jpg","img/MurkaPost.jpg","components/Header/Header.js","components/Home/Home.js","components/Posts/Post.js","components/Posts/Posts.js","components/Header/Photos/Photos.js","components/Header/Contacts/Contacts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","exact","to","activeClassName","Home","Component","Post","props","style","backgroundImage","author","avatar","name","nickname","date","content","photo","src","LikeIcon","alt","likes","posts","Bikini","BikiniPost","Milka","MilkaPost1","MilkaPost2","Murka","MurkaPost","Posts","map","post","index","key","Photos","Contacts","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8a9a7c04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Milka.f1723475.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LikeIcon.f375abe3.png\";","module.exports = __webpack_public_path__ + \"static/media/Bikini.0eb9f4cb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BikiniPost.f4c90763.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MilkaPost1.5c2d8dbe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MilkaPost2.84b8e246.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Murka.b9dc0917.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MurkaPost.938f3236.jpg\";","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header(){\r\n    return(\r\n        <div className=\"header\">\r\n            <NavLink exact to=\"/home\" activeClassName=\"selected\">HOME</NavLink>\r\n            <NavLink exact to=\"/posts\" activeClassName=\"selected\">POSTS</NavLink>\r\n            <NavLink exact to=\"/photos\" activeClassName=\"selected\">PHOTOS</NavLink>\r\n            <NavLink exact to=\"/contacts\" activeClassName=\"selected\">CONTACTS</NavLink>\r\n        </div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\n// import Picture from \"../../img/home5.jpg\";\r\n\r\nexport default class Home extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"home-picture\">\r\n                <span className=\"home-text\">Color of mood</span>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport LikeIcon from \"../../img/LikeIcon.png\";\r\n\r\nexport default function Post(props){\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post-header\">\r\n                <div className=\"avatar\" style={{backgroundImage: `url(${props.author.avatar})`}}></div>\r\n                <div className=\"post-text\">\r\n                    <p><strong className=\"name\">{props.author.name}</strong><span>{props.author.nickname} â€¢ {props.date}</span></p>\r\n                    <p className=\"post-content\">{props.content}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"photo\" style={{backgroundImage: `url(${props.photo})`}}></div>\r\n            <div className=\"post-footer\">\r\n                <img className=\"like-icon\" src={LikeIcon} alt=\"like\"/>\r\n                <span>{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport './Post.css';\r\nimport Post from \"./Post\";\r\nimport Bikini from \"../../img/Bikini.jpg\";\r\nimport BikiniPost from \"../../img/BikiniPost.jpg\";\r\nimport Milka from \"../../img/Milka.jpg\";\r\nimport MilkaPost1 from \"../../img/MilkaPost1.jpg\";\r\nimport MilkaPost2 from \"../../img/MilkaPost2.jpg\";\r\nimport Murka from \"../../img/Murka.jpg\";\r\nimport MurkaPost from \"../../img/MurkaPost.jpg\";\r\n\r\nconst posts = [{\r\n    author: {\r\n      name: \"Bikini\",\r\n      avatar: Bikini,\r\n      nickname: \"@bikinyator\"\r\n    },\r\n    content: \"My sister and me\",\r\n    photo: BikiniPost,\r\n    date: \"26 sept.\",\r\n    likes: 444\r\n  }, {\r\n    author: {\r\n        name: \"Milka\",\r\n        avatar: Milka,\r\n        nickname: \"@milkyway\"\r\n      },\r\n      content: \"Human bought me new toy!\",\r\n      photo: MilkaPost1,\r\n      date: \"24 sept.\",\r\n      likes: 598\r\n  }, {\r\n    author: {\r\n        name: \"Milka\",\r\n        avatar: Milka,\r\n        nickname: \"@milkyway\"\r\n      },\r\n      content: \"My kids\",\r\n      photo: MilkaPost2,\r\n      date: \"14 sept.\",\r\n      likes: 564\r\n  }, {\r\n    author: {\r\n      name: \"Murka\",\r\n      avatar: Murka,\r\n      nickname: \"@murembo\"\r\n    },\r\n    content: \"Do NOT step outside your comfort zone\",\r\n    photo: MurkaPost,\r\n    date: \"26 sept.\",\r\n    likes: 546\r\n  }\r\n];\r\n\r\nexport default class Posts extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"posts-page\">\r\n                <div className=\"posts-wrapper\">\r\n                    {posts.map((post, index) => {\r\n                        return <Post {...post} key={index} />\r\n                    })}\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Photos extends Component{\r\n    render(){\r\n        return(\r\n            <div>Photos</div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default class Contacts extends Component{\r\n    render(){\r\n        return(\r\n            <div>Contacts</div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Home from './components/Home/Home';\nimport Posts from './components/Posts/Posts';\nimport Photos from './components/Header/Photos/Photos';\nimport Contacts from './components/Header/Contacts/Contacts';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"content\">\n        <Route exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route exact path=\"/19-homework\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/posts\" component={Posts} />\n        <Route exact path=\"/photos\" component={Photos} />\n        <Route exact path=\"/contacts\" component={Contacts} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}